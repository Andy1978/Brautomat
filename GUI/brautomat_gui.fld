# data file for the Fltk User Interface Designer (fluid)
version 1.0302 
header_name {.h} 
code_name {.cxx}
decl {\#include "../driver/cBrautomat.h"} {public global
} 

decl {\#include "Spreadsheet.h"} {public global
} 

decl {cBrautomat *myBrautomat = NULL;} {private local
} 

Function {close_cb(Fl_Widget*, void*)} {open return_type void
} {
  code {delete myBrautomat;
exit(0);} {}
} 

Function {} {open
} {
  Fl_Window mainwin {
    label {Brauautomat GUI v0.0.2} open selected
    xywh {1319 53 600 800} type Double resizable size_range {600 800 1000 1000} visible
  } {
    Fl_Group {} {
      label {R체hrwerk} open
      xywh {10 180 385 115} box GTK_UP_BOX align 5
    } {
      Fl_Light_Button {} {
        label Hand
        callback {myBrautomat->set_period_set_point(0);}
        xywh {25 205 70 30} type Radio value 1
      }
      Fl_Light_Button {} {
        label Sinus
        callback {myBrautomat->set_period_set_point(sl_periodendauer->value());}
        xywh {25 245 70 30} type Radio
      }
      Fl_Value_Slider sl_amplitude {
        label Amplitude
        callback {myBrautomat->set_amplitude_set_point(sl_amplitude->value());}
        xywh {120 210 260 25} type {Horz Knob} align 5 minimum -126 maximum 126 step 1
      }
      Fl_Value_Slider sl_periodendauer {
        label Periodendauer
        callback {myBrautomat->set_period_set_point(sl_periodendauer->value());}
        xywh {120 255 260 20} type {Horz Knob} align 5 minimum 1 maximum 5 step 0.2 value 2
      }
    }
    Fl_Group {} {
      label {Heizung Sollwerte und Steuerung} open
      xywh {10 25 385 130} box GTK_UP_BOX align 5
    } {
      Fl_Light_Button {} {
        label Hand
        callback {myBrautomat->set_temperature_mode(0);}
        xywh {20 40 65 30} type Radio value 1
      }
      Fl_Light_Button {} {
        label Auto
        callback {myBrautomat->set_temperature_mode(1);}
        xywh {20 90 65 30} type Radio
      }
      Fl_Button {} {
        label Ein
        callback {myBrautomat->set_heater(1);}
        xywh {124 35 40 30}
      }
      Fl_Button {} {
        label Aus
        callback {myBrautomat->set_heater(0);}
        xywh {169 35 40 30}
      }
      Fl_Value_Slider sl_temperatur {
        label Solltemperatur
        callback {myBrautomat->set_temperature(sl_temperatur->value());}
        xywh {125 90 259 25} type {Horz Knob} align 5 minimum 15 maximum 99.5 step 0.5 value 20
      }
      Fl_Check_Button cb_temp_from_profile {
        label {Sollwert aus Temperaturprofil}
        callback {myBrautomat->set_temperatur_from_profile(cb_temp_from_profile->value());}
        xywh {120 121 230 24} down_box DOWN_BOX
      }
    }
    Fl_Group {} {
      label {Heizung Istwerte} open
      xywh {405 25 185 130} box GTK_UP_BOX align 5
    } {
      Fl_Light_Button {} {
        label {Heizung aktiv}
        xywh {425 110 150 30}
      }
      Fl_Value_Output {} {
        label {Temperatur [째C]}
        xywh {535 35 40 30} maximum 100 step 0.1 value 20
      }
      Fl_Value_Output {} {
        label {Sollwert [째C]}
        xywh {535 70 40 30} maximum 100 step 0.1 value 20
      }
    }
    Fl_Group {} {
      label Temperaturprofil open
      xywh {10 320 580 280} box GTK_UP_BOX align 5
    } {
      Fl_Table temp_profile {
        label Schrittparameter open
        xywh {30 425 405 155} align 5
        class Spreadsheet
      } {}
      Fl_Value_Output {} {
        label {aktiver Schritt }
        xywh {255 340 50 25}
      }
      Fl_Value_Output {} {
        label {verbleibende Zeit im Schritt [s] }
        xywh {255 370 50 25}
      }
      Fl_Button {} {
        label {Schritt vor}
        xywh {320 340 115 30}
      }
      Fl_Button {} {
        label {Schritt zur체ck}
        xywh {320 370 115 30}
      }
      Fl_Button {} {
        label Upload
        xywh {475 460 85 25}
      }
      Fl_Button {} {
        label Download
        xywh {475 515 85 25}
      }
    }
  }
  code {mainwin->callback(close_cb);
myBrautomat = new cBrautomat("/dev/ttyUSB0");

// Table rows
  temp_profile->row_header(1);
  temp_profile->row_header_width(70);
  temp_profile->row_resize(1);
  temp_profile->rows(5);
  temp_profile->row_height_all(25);
  // Table cols
  temp_profile->col_header(1);
  temp_profile->col_header_height(25);
  temp_profile->col_resize(1);
  temp_profile->cols(MAX_COLS);
  
  temp_profile->col_width(0, 90);
  temp_profile->col_width(1, 120);
  temp_profile->col_width(2, 120);} {}
} 
